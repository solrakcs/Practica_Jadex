package ZombiesOntologia;

import ZombiesOntologia.impl.*;


import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: UC3M<br>
 * @version generated on Mon Dec 14 17:19:14 CET 2020 by gonvega
 */
public class UC3M implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public UC3M(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public UC3M(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Abominacion
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Abominacion", Abominacion.class, DefaultAbominacion.class);
    }

    /**
     * Creates an instance of type Abominacion.  Modifies the underlying ontology.
     */
    public Abominacion createAbominacion(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ABOMINACION, DefaultAbominacion.class);
    }

    /**
     * Gets an instance of type Abominacion with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Abominacion getAbominacion(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ABOMINACION, DefaultAbominacion.class);
    }

    /**
     * Gets all instances of Abominacion from the ontology.
     */
    public Collection<? extends Abominacion> getAllAbominacionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ABOMINACION, DefaultAbominacion.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Arma
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Arma", Arma.class, DefaultArma.class);
    }

    /**
     * Creates an instance of type Arma.  Modifies the underlying ontology.
     */
    public Arma createArma(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ARMA, DefaultArma.class);
    }

    /**
     * Gets an instance of type Arma with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Arma getArma(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ARMA, DefaultArma.class);
    }

    /**
     * Gets all instances of Arma from the ontology.
     */
    public Collection<? extends Arma> getAllArmaInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ARMA, DefaultArma.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Calle
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Calle", Calle.class, DefaultCalle.class);
    }

    /**
     * Creates an instance of type Calle.  Modifies the underlying ontology.
     */
    public Calle createCalle(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CALLE, DefaultCalle.class);
    }

    /**
     * Gets an instance of type Calle with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Calle getCalle(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CALLE, DefaultCalle.class);
    }

    /**
     * Gets all instances of Calle from the ontology.
     */
    public Collection<? extends Calle> getAllCalleInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CALLE, DefaultCalle.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Carta
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Carta", Carta.class, DefaultCarta.class);
    }

    /**
     * Creates an instance of type Carta.  Modifies the underlying ontology.
     */
    public Carta createCarta(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CARTA, DefaultCarta.class);
    }

    /**
     * Gets an instance of type Carta with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Carta getCarta(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CARTA, DefaultCarta.class);
    }

    /**
     * Gets all instances of Carta from the ontology.
     */
    public Collection<? extends Carta> getAllCartaInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CARTA, DefaultCarta.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Casilla
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Casilla", Casilla.class, DefaultCasilla.class);
    }

    /**
     * Creates an instance of type Casilla.  Modifies the underlying ontology.
     */
    public Casilla createCasilla(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CASILLA, DefaultCasilla.class);
    }

    /**
     * Gets an instance of type Casilla with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Casilla getCasilla(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CASILLA, DefaultCasilla.class);
    }

    /**
     * Gets all instances of Casilla from the ontology.
     */
    public Collection<? extends Casilla> getAllCasillaInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CASILLA, DefaultCasilla.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Conexion
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Conexion", Conexion.class, DefaultConexion.class);
    }

    /**
     * Creates an instance of type Conexion.  Modifies the underlying ontology.
     */
    public Conexion createConexion(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CONEXION, DefaultConexion.class);
    }

    /**
     * Gets an instance of type Conexion with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Conexion getConexion(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CONEXION, DefaultConexion.class);
    }

    /**
     * Gets all instances of Conexion from the ontology.
     */
    public Collection<? extends Conexion> getAllConexionInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CONEXION, DefaultConexion.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Corredor
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Corredor", Corredor.class, DefaultCorredor.class);
    }

    /**
     * Creates an instance of type Corredor.  Modifies the underlying ontology.
     */
    public Corredor createCorredor(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CORREDOR, DefaultCorredor.class);
    }

    /**
     * Gets an instance of type Corredor with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Corredor getCorredor(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CORREDOR, DefaultCorredor.class);
    }

    /**
     * Gets all instances of Corredor from the ontology.
     */
    public Collection<? extends Corredor> getAllCorredorInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CORREDOR, DefaultCorredor.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Exit
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Exit", Exit.class, DefaultExit.class);
    }

    /**
     * Creates an instance of type Exit.  Modifies the underlying ontology.
     */
    public Exit createExit(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_EXIT, DefaultExit.class);
    }

    /**
     * Gets an instance of type Exit with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Exit getExit(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_EXIT, DefaultExit.class);
    }

    /**
     * Gets all instances of Exit from the ontology.
     */
    public Collection<? extends Exit> getAllExitInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_EXIT, DefaultExit.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Gordo
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Gordo", Gordo.class, DefaultGordo.class);
    }

    /**
     * Creates an instance of type Gordo.  Modifies the underlying ontology.
     */
    public Gordo createGordo(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GORDO, DefaultGordo.class);
    }

    /**
     * Gets an instance of type Gordo with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Gordo getGordo(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GORDO, DefaultGordo.class);
    }

    /**
     * Gets all instances of Gordo from the ontology.
     */
    public Collection<? extends Gordo> getAllGordoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GORDO, DefaultGordo.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Indoor
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Indoor", Indoor.class, DefaultIndoor.class);
    }

    /**
     * Creates an instance of type Indoor.  Modifies the underlying ontology.
     */
    public Indoor createIndoor(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INDOOR, DefaultIndoor.class);
    }

    /**
     * Gets an instance of type Indoor with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Indoor getIndoor(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INDOOR, DefaultIndoor.class);
    }

    /**
     * Gets all instances of Indoor from the ontology.
     */
    public Collection<? extends Indoor> getAllIndoorInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INDOOR, DefaultIndoor.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Noise
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Noise", Noise.class, DefaultNoise.class);
    }

    /**
     * Creates an instance of type Noise.  Modifies the underlying ontology.
     */
    public Noise createNoise(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_NOISE, DefaultNoise.class);
    }

    /**
     * Gets an instance of type Noise with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Noise getNoise(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_NOISE, DefaultNoise.class);
    }

    /**
     * Gets all instances of Noise from the ontology.
     */
    public Collection<? extends Noise> getAllNoiseInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_NOISE, DefaultNoise.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Normal
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Normal", Normal.class, DefaultNormal.class);
    }

    /**
     * Creates an instance of type Normal.  Modifies the underlying ontology.
     */
    public Normal createNormal(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_NORMAL, DefaultNormal.class);
    }

    /**
     * Gets an instance of type Normal with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Normal getNormal(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_NORMAL, DefaultNormal.class);
    }

    /**
     * Gets all instances of Normal from the ontology.
     */
    public Collection<? extends Normal> getAllNormalInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_NORMAL, DefaultNormal.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Objetivo
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Objetivo", Objetivo.class, DefaultObjetivo.class);
    }

    /**
     * Creates an instance of type Objetivo.  Modifies the underlying ontology.
     */
    public Objetivo createObjetivo(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OBJETIVO, DefaultObjetivo.class);
    }

    /**
     * Gets an instance of type Objetivo with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Objetivo getObjetivo(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OBJETIVO, DefaultObjetivo.class);
    }

    /**
     * Gets all instances of Objetivo from the ontology.
     */
    public Collection<? extends Objetivo> getAllObjetivoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OBJETIVO, DefaultObjetivo.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Objeto
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Objeto", Objeto.class, DefaultObjeto.class);
    }

    /**
     * Creates an instance of type Objeto.  Modifies the underlying ontology.
     */
    public Objeto createObjeto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_OBJETO, DefaultObjeto.class);
    }

    /**
     * Gets an instance of type Objeto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Objeto getObjeto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_OBJETO, DefaultObjeto.class);
    }

    /**
     * Gets all instances of Objeto from the ontology.
     */
    public Collection<? extends Objeto> getAllObjetoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_OBJETO, DefaultObjeto.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Sangre
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Sangre", Sangre.class, DefaultSangre.class);
    }

    /**
     * Creates an instance of type Sangre.  Modifies the underlying ontology.
     */
    public Sangre createSangre(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SANGRE, DefaultSangre.class);
    }

    /**
     * Gets an instance of type Sangre with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Sangre getSangre(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SANGRE, DefaultSangre.class);
    }

    /**
     * Gets all instances of Sangre from the ontology.
     */
    public Collection<? extends Sangre> getAllSangreInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SANGRE, DefaultSangre.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Skills
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Skills", Skills.class, DefaultSkills.class);
    }

    /**
     * Creates an instance of type Skills.  Modifies the underlying ontology.
     */
    public Skills createSkills(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }

    /**
     * Gets an instance of type Skills with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Skills getSkills(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }

    /**
     * Gets all instances of Skills from the ontology.
     */
    public Collection<? extends Skills> getAllSkillsInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SKILLS, DefaultSkills.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Survivor
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Survivor", Survivor.class, DefaultSurvivor.class);
    }

    /**
     * Creates an instance of type Survivor.  Modifies the underlying ontology.
     */
    public Survivor createSurvivor(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SURVIVOR, DefaultSurvivor.class);
    }

    /**
     * Gets an instance of type Survivor with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Survivor getSurvivor(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SURVIVOR, DefaultSurvivor.class);
    }

    /**
     * Gets all instances of Survivor from the ontology.
     */
    public Collection<? extends Survivor> getAllSurvivorInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SURVIVOR, DefaultSurvivor.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Token
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Token", Token.class, DefaultToken.class);
    }

    /**
     * Creates an instance of type Token.  Modifies the underlying ontology.
     */
    public Token createToken(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TOKEN, DefaultToken.class);
    }

    /**
     * Gets an instance of type Token with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Token getToken(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TOKEN, DefaultToken.class);
    }

    /**
     * Gets all instances of Token from the ontology.
     */
    public Collection<? extends Token> getAllTokenInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TOKEN, DefaultToken.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#Zombie
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#Zombie", Zombie.class, DefaultZombie.class);
    }

    /**
     * Creates an instance of type Zombie.  Modifies the underlying ontology.
     */
    public Zombie createZombie(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ZOMBIE, DefaultZombie.class);
    }

    /**
     * Gets an instance of type Zombie with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Zombie getZombie(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ZOMBIE, DefaultZombie.class);
    }

    /**
     * Gets all instances of Zombie from the ontology.
     */
    public Collection<? extends Zombie> getAllZombieInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ZOMBIE, DefaultZombie.class);
    }


    /* ***************************************************
     * Class http://www.owl-ontologies.com/Ontology1607619237.owl#ZombieSource
     */

    {
        javaMapping.add("http://www.owl-ontologies.com/Ontology1607619237.owl#ZombieSource", ZombieSource.class, DefaultZombieSource.class);
    }

    /**
     * Creates an instance of type ZombieSource.  Modifies the underlying ontology.
     */
    public ZombieSource createZombieSource(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ZOMBIESOURCE, DefaultZombieSource.class);
    }

    /**
     * Gets an instance of type ZombieSource with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public ZombieSource getZombieSource(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ZOMBIESOURCE, DefaultZombieSource.class);
    }

    /**
     * Gets all instances of ZombieSource from the ontology.
     */
    public Collection<? extends ZombieSource> getAllZombieSourceInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ZOMBIESOURCE, DefaultZombieSource.class);
    }


}
